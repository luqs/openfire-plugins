
<project name="openfire plugin build" default="plugin_jar" basedir=".">
	
	<property file="build.properties" />
	
	
	<property name="plugin.output.path" value="../src/plugins/${plugin.name}/dist" />
	<property name="plugin.main.src.path" value="../src/plugins/${plugin.name}/src" />
	<property name="plugin.main.dist.path" value="${plugin.output.path}/main/classes" />
	<property name="plugin.main.jar" value="${plugin.output.path}/main/plugin-${plugin.name}-main.jar" />
		
	<property name="plugin.jsp.dist.path" value="${plugin.output.path}/jsp/classes" />
	<property name="plugin.jsp.src.path" value="${plugin.output.path}/jsp/src" />
	<property name="plugin.jsp.jar" value="${plugin.output.path}/jsp/plugin-${plugin.name}-jsp.jar" />
	
	<import file="${plugin.main.src.path}/buildext.xml" optional="true" />
  
	
	<target name="init">
		<mkdir dir="${plugin.output.path}" />
		<mkdir dir="${plugin.main.dist.path}" />
		<mkdir dir="${plugin.jsp.dist.path}" />
		<mkdir dir="${plugin.jsp.src.path}" />
	</target>
	
	<target name="clean">
		<delete dir="${plugin.output.path}" />
	</target>


	<target name="main_compile" depends="init">
	<description> 编译插件代码 </description>
		<javac destdir="${plugin.main.dist.path}"  failonerror="false"
				fork="yes"  
				encoding="UTF-8"
				target="1.6" 
				source="1.6"
				srcdir="${plugin.main.src.path}/main" 
				excludes="**/*.smap" >
				<classpath>
					<fileset dir="../lib">
						<include name="*.jar" />
					</fileset>
				</classpath>
				<include name="**" />
				<exclude name="tags/**" />
		</javac>
		
		<jar jarfile="${plugin.main.jar}" basedir="${plugin.main.dist.path}" />
	</target>
	
	<target name="jsp_compile" depends="jspc">
		<description> 将编译好的jsp文件，编译为class </description>
	
		<javac destdir="${plugin.jsp.dist.path}" 
            encoding="UTF-8" debug="on" failonerror="false"
			fork="yes"         
			target="1.6"
			source="1.6"
            srcdir="${plugin.jsp.src.path}" 
			excludes="**/*.smap">
			<classpath>
				<pathelement location="${plugin.main.dist.path}" />
				<pathelement location="../bin" />
				
				<fileset dir="../lib">
					<include name="*.jar" />
				</fileset>
				
				<pathelement location="${tomcat.home}/common/classes" />
				<fileset dir="${tomcat.home}/common/lib">
					<include name="*.jar" />
				</fileset>
				
				<pathelement location="${tomcat.home}/shared/classes" />
				<fileset dir="${tomcat.home}/shared/lib">
					<include name="*.jar" />
				</fileset>
				
				<fileset dir="${tomcat.home}/bin">
					<include name="*.jar" />
				</fileset>
			</classpath>
			<include name="**" />
			<exclude name="tags/**" />
		</javac>

		<jar jarfile="${plugin.jsp.jar}" basedir="${plugin.jsp.dist.path}" />
	</target>

	<target name="jspc">
	<description> 编译插件jsp文件 </description>
		<taskdef classname="org.apache.jasper.JspC" name="jasper2">
			<classpath id="jspc.classpath">
				<pathelement location="${java.home}/../lib/tools.jar" />
				<fileset dir="${tomcat.home}/bin">
					<include name="*.jar" />
				</fileset>
				<fileset dir="${tomcat.home}/server/lib">
					<include name="*.jar" />
				</fileset>
				<fileset dir="${tomcat.home}/common/lib">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</taskdef>

	
		<jasper2 javaEncoding="UTF-8" validateXml="false" uriroot="${plugin.main.src.path}/web"
            outputDir="${plugin.jsp.src.path}"
            package="com.skyseas.openfireplugins.${plugin.name}" />

		<jasper2 validateXml="false" uriroot="${plugin.main.src.path}/web"
            outputDir="${plugin.jsp.src.path}"
            package="com.skyseas.openfireplugins.${plugin.name}"
            webXml="${plugin.jsp.src.path}/web.xml"/>
			
	</target>
	
	
	<target name="plugin_jar"  depends="main_compile,jsp_compile" >
		<description> 打包可部署的插件jar文件 </description>
		
		<property name="plugin_root" value="${plugin.output.path}/plugin" />
		<property name="lib" value="${plugin_root}/lib" />
		
		
		<!-- 插件插件包相关lib、 web目录 -->
		<mkdir dir="${lib}"/>
		<mkdir dir="${plugin.output.path}/plugin/web/WEB-INF"/>

		<!-- 复制插件主代码jar和servlet jar  -->
		<copy file="${plugin.main.jar}" todir="${lib}"/>
		<copy file="${plugin.jsp.jar}" todir="${lib}"/>
		
		<!-- 复制插件自身依赖的jar文件 -->
		<antcall target="copy_plugin_refs" >
			<param name="todir" value="${lib}"/>
		</antcall>

		<!-- 将相关的图片、帮助文档、修改日志等文件复制到插件目录下 -->
		<copy todir="${plugin_root}">
			<fileset dir="${plugin.main.src.path}" includes="*.*" excludes="buildext.xml" />
		</copy>

		<!-- jsp servlet的web xml 复制到插件目录下 -->
		<copy file="${plugin.jsp.src.path}/web.xml" todir="${plugin_root}/web/WEB-INF"/>
		
		<!-- 拷贝database目录中的sql脚本 -->
		<antcall target="copy_database" />
		
		<!-- 产生可部署插件包 -->
		<jar jarfile="${plugin.output.path}/${plugin.name}.jar">
			<fileset dir="${plugin_root}" includes="**/**"/>
		</jar>
			
	</target>
	
	<target name="check_database">		
		<description>检查database目录是否存在</description>
		<property name="database_target" value="${plugin.main.src.path}/database" />
		<available file="${database_target}" property="database_exists" />
	</target>
	
	<target name="copy_database" depends="check_database" if="database_exists" >
		<description>拷贝database目录</description>				
		<copy todir="${plugin_root}/database">
            <fileset dir="${database_target}" includes="**/**" />
		</copy>
	</target>
	
	
	<target name="copy_plugin_refs" if="copy_refs">
		<copy todir="${todir}">
			<fileset dir="../lib">
				<patternset refid="plugin_refs" />
			</fileset>
		</copy>
	</target>

</project>